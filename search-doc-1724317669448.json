{"searchDocs":[{"title":"Download Schematics","type":0,"sectionRef":"#","url":"/schematics/","content":"","keywords":"","version":"Next"},{"title":"üìê Download the Schematics PDF‚Äã","type":1,"pageTitle":"Download Schematics","url":"/schematics/#-download-the-schematics-pdf","content":" We‚Äôve created detailed schematics to assist you. Click the link below to download the PDF and explore the intricate designs:  Download the PDF‚Äã  If you have any questions or need further clarification, don‚Äôt hesitate to contact us! ","version":"Next","tagName":"h2"},{"title":"Safety and Other Important Notices","type":0,"sectionRef":"#","url":"/safety-and-other-important-notices/","content":"Safety and Other Important Notices Safety Notices Prior to using this product, read, understand, and follow the instructions for this device and any associated software. If you do not fully understand the instructions, contact support.freewili.com for support. Do not use this product if it has been used outside of the specified operating conditions or is suspected to be damaged. There are no operator serviceable parts inside this equipment. Should you suspect the device is not operating properly, please contact support.freewili.com The failure modes of this device should be carefully considered prior to using it to instrument safety critical systems. A single point of failure at this device should not prevent the safe operation of any vehicle system. Occasionally, hardware and software are released for testing and evaluation in a beta release. These releases are not subject to full Quality Assurance. They should be used only in a controlled environment with consideration of any impact the safety of the user and the surrounding people and environment. Data and test results from beta hardware and software should be appropriately scrutinized. Intended Use This hardware is intended for the use of developing automotive communication networks. It is suitable for operation in dry environments such as the passenger compartment or trunk area. Direct exposure to water or excessively damp environments may result in malfunction or damage to the device. Deviating from the intended use of this product or operating outside of its specifications may cause malfunction or damage and will void the manufacturer‚Äôs warranty. Disclaimers Every attempt is made to keep this documentation accurate and current. FREE-WILi reserves the right to update this documentation without notice and assumes no liability from its use.","keywords":"","version":"Next"},{"title":"Introduction and Overview","type":0,"sectionRef":"#","url":"/introduction-and-overview/","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Introduction and Overview","url":"/introduction-and-overview/#introduction","content":" Thank you for purchasing a FREE-WILi Whale Tail tool sponsored by Microchip, Analog Devices and ICS Village. Thanks to our sponsors for allowing us to keep the prices low for everyone to get access to this badge at an affordable price.  FREE-WILi teamed up with Defcon industrial control systems (ICS) village to bring you an ICS first ever badge. The badge will make your Defcon experience more memorable by highlighting digital protocols commonly used in industrial settings. This innovative badge features cutting-edge technologies like CAN FD and 10BASE-T1L, making it a versatile tool for both learning and application in industrial and automotive environments.  At the heart of the Whale Tail Badge is a RP2040 Microcontroller  ","version":"Next","tagName":"h2"},{"title":"Package Contents‚Äã","type":1,"pageTitle":"Introduction and Overview","url":"/introduction-and-overview/#package-contents","content":" If you purchase the Whale Tail from the Defcon 32 industrial control systems (ICS) then you will have received a Whale Tail badge, cable to add FREE-WILi device and RF-Controlled LED Bracelets.  ","version":"Next","tagName":"h2"},{"title":"Operational Overview‚Äã","type":1,"pageTitle":"Introduction and Overview","url":"/introduction-and-overview/#operational-overview","content":" With a Raspberry Pi Pico, the uses are infinite! However, this isn't just a Raspberry Pi Pico, your Whale Tail features a variety of interfaces and capabilities, including a 10BASE-T1L interface for lightweight, long-distance data transmission up to 10 Mbps, a CAN FD interface, an RS485 Modbus interface, and a 4-20mA sensor simulator. It also includes 6 programmable RGB LEDs, 2 capacitive touch sensors, and an expansion plug for adding display, power, and wireless modules using FREE-WILi. This versatile badge is designed for seamless integration and programming, making it suitable for testing and development purposes.  Whale Tail Badge Overview  ","version":"Next","tagName":"h2"},{"title":"Block Diagram‚Äã","type":1,"pageTitle":"Introduction and Overview","url":"/introduction-and-overview/#block-diagram","content":" FREE-WILi Whale Tail Front Side -  FREE-WILi Whale Tail Front View  FREE-WILi Whale Tail Back Side -  FREE-WILi Whale Tail Back View  ","version":"Next","tagName":"h2"},{"title":"Summary of Key Features‚Äã","type":1,"pageTitle":"Introduction and Overview","url":"/introduction-and-overview/#summary-of-key-features","content":" 1x 10BASE-T1L Interface based on Analog Devices ADIN11101x CAN FD Interface: Based on Microchip MCP2518FD binary compatible with CANIS lab CANPICOBlack contains two Texas Instruments CC1101 Sub Ghz Radios with programmable filter ranges for 300-348, 387-464, 779-928 bands.RS485 Modbus Interface6x Serial RGB Color Programmable LED4-20mA Sensor SimulatorExpansion Plug for FREE-WILi Device  ","version":"Next","tagName":"h2"},{"title":"Hardware and Software Requirements‚Äã","type":1,"pageTitle":"Introduction and Overview","url":"/introduction-and-overview/#hardware-and-software-requirements","content":" USB Type C cable for power and configurationOptional FREE-WILi Device ","version":"Next","tagName":"h2"},{"title":"Whale Tail Badge Tour and Pinout","type":0,"sectionRef":"#","url":"/whale-tail-badge-tour-and-pinout/","content":"","keywords":"","version":"Next"},{"title":"Pinout‚Äã","type":1,"pageTitle":"Whale Tail Badge Tour and Pinout","url":"/whale-tail-badge-tour-and-pinout/#pinout","content":" Green Connector Channel Pinout  PIN#\t1\t2\t3CH1 - ModBus\tA\tGND\tB CH2 - CAN FD\tCAN L\tGND\tCAN H CH3 - 10BASE-T1L\tT1L-\tGND\tT1L+ CH4 - Sensor Simulator\tLoop\tGND\tLoop +  ","version":"Next","tagName":"h2"},{"title":"GPIO Pin Descriptions‚Äã‚Äã","type":1,"pageTitle":"Whale Tail Badge Tour and Pinout","url":"/whale-tail-badge-tour-and-pinout/#gpio-pin-descriptions","content":" The table below describes the pins. All GPIO except dedicated pins can be used bidirectionally depending on the application. So the directions are the default.  Pin\tDescription\tDefault Direction\tNotes1 2\t5V Out\tOutput\t5V to power IO and external circuit 3\tGPIO27 OUT\tOutput\tRPi 2040 GPIO27 4\tV PINS IN\tInput\tInput to set the IO voltage 1.1 to 5.5V 5\tUART1 Rx IN\tInput\tRPi 2040 UART 1 Receive (GPIO9) 6\t3.3V Out\tOutput\t3.3 V to Power IO and external circuit 7\tUART1 CTS IN\tInput\tRPi 2040 UART 1 Clear To Send (GPIO10)5 8 9\tUART1 TX OUT\tOutput\tRPi 2040 UART1 Transmit (GPIO8) 10 11\tUART1 RTS OUT\tOutput\tRPi 2040 UART 1 Request To Send (GPIO11) 12 13 14\tGPIO 26 IN\tInput\tRPi 2040 GPIO26 15\tSPI1 SCLK OUT\tOutput\tRPi 2040 SPI 1 Clock (GPIO14) 16 17\tGPIO25 OUT\tOutput\tRPi 2040 GPIO25. GPIO25 also connects to board status LED (same as RPi Pico) 18 19\tGND 20\tGND   Green Connector Channel Pinout ","version":"Next","tagName":"h2"},{"title":"Setup","type":0,"sectionRef":"#","url":"/setup/","content":"","keywords":"","version":"Next"},{"title":"How to download a UF2 File to your Whale Tail Badge‚Äã","type":1,"pageTitle":"Setup","url":"/setup/#how-to-download-a-uf2-file-to-your-whale-tail-badge","content":" Download the FREE-WILi Whale Tail Badge UF2 file by clicking here.  ","version":"Next","tagName":"h2"},{"title":"CONNECT THE Whale Tail TO YOUR COMPUTER‚Äã","type":1,"pageTitle":"Setup","url":"/setup/#connect-the-whale-tail-to-your-computer","content":" Connect the USB Type C cable to your host computer. Connect the other end of the USB cable to the while you press and hold the button button on the hardware. This will cause the Raspberry Pi Pico to enter bootloader mode and allow you to upload a new UF2 File.    Release the button once the cable is connected. A disk volume called RPI-RP2 will appear on your computer.  ","version":"Next","tagName":"h3"},{"title":"Load a UF2 File to the Raspberry Pi Pico‚Äã","type":1,"pageTitle":"Setup","url":"/setup/#load-a-uf2-file-to-the-raspberry-pi-pico","content":" Open RPI-RP2 on your computer by double-clicking it.4Drag and drop the .uf2 file that you downloaded earlier.  RPI-RP2 will unmount and the LEDs on your whale tail will start blinking  You‚Äôve just uploaded the first bit of code to your Whale Tail Badge! ","version":"Next","tagName":"h3"},{"title":"Whale Tail Badge Documentation","type":0,"sectionRef":"#","url":"/","content":"","keywords":"","version":"Next"},{"title":"Contents:‚Äã","type":1,"pageTitle":"Whale Tail Badge Documentation","url":"/#contents","content":" ","version":"Next","tagName":"h2"},{"title":"(1) Safety and Other Important Notices‚Äã","type":1,"pageTitle":"Whale Tail Badge Documentation","url":"/#1-safety-and-other-important-notices","content":" ","version":"Next","tagName":"h3"},{"title":"(2) Introduction and Overview‚Äã","type":1,"pageTitle":"Whale Tail Badge Documentation","url":"/#2-introduction-and-overview","content":" ","version":"Next","tagName":"h3"},{"title":"(3) Whale Tail Badge Tour and Pinout‚Äã","type":1,"pageTitle":"Whale Tail Badge Documentation","url":"/#3-whale-tail-badge-tour-and-pinout","content":" ","version":"Next","tagName":"h3"},{"title":"(4) Setup‚Äã","type":1,"pageTitle":"Whale Tail Badge Documentation","url":"/#4-setup","content":" ","version":"Next","tagName":"h3"},{"title":"(5) Whale Tail MicroPython Examples‚Äã","type":1,"pageTitle":"Whale Tail Badge Documentation","url":"/#5-whale-tail-micropython-examples","content":" ","version":"Next","tagName":"h3"},{"title":"(6) Download Schematics‚Äã","type":1,"pageTitle":"Whale Tail Badge Documentation","url":"/#6-download-schematics","content":"","version":"Next","tagName":"h3"},{"title":"Whale Tail MicroPython Examples","type":0,"sectionRef":"#","url":"/whale-tail-micropython-examples/","content":"","keywords":"","version":"Next"},{"title":"Examples‚Äã","type":1,"pageTitle":"Whale Tail MicroPython Examples","url":"/whale-tail-micropython-examples/#examples","content":" ","version":"Next","tagName":"h2"},{"title":"Pin‚Äã","type":1,"pageTitle":"Whale Tail MicroPython Examples","url":"/whale-tail-micropython-examples/#pin","content":" A pin object is used to control I/O pins (also known as GPIO - general-purpose input/output). Pin objects are commonly associated with a physical pin that can drive an output voltage and read input voltages. The pin class has methods to set the mode of the pin (IN, OUT, etc) and methods to get and set the digital logic level. For analog control of a pin, see the ADC class.  A pin object is constructed by using an identifier which unambiguously specifies a certain I/O pin. The allowed forms of the identifier and the physical pin that the identifier maps to are port-specific. Possibilities for the identifier are an integer, a string or a tuple with port and pin number.   from machine import Pin # create an output pin on pin #0 p0 = Pin(0, Pin.OUT) # set the value low then high p0.value(0) p0.value(1) # create an input pin on pin #2, with a pull up resistor p2 = Pin(2, Pin.IN, Pin.PULL_UP) # read and print the pin value print(p2.value()) # reconfigure pin #0 in input mode with a pull down resistor p0.init(p0.IN, p0.PULL_DOWN) # configure an irq callback p0.irq(lambda p: print(p))   Pin values can be set; however, Signals are easier to control  ","version":"Next","tagName":"h3"},{"title":"Signal (used for LEDs)‚Äã","type":1,"pageTitle":"Whale Tail MicroPython Examples","url":"/whale-tail-micropython-examples/#signal-used-for-leds","content":" https://docs.micropython.org/en/latest/library/machine.Signal.html  The Signal class is a simple extension of the Pin class. Unlike Pin, which can be only in ‚Äúabsolute‚Äù 0 and 1 states, a Signal can be in ‚Äúasserted‚Äù (on) or ‚Äúdeasserted‚Äù (off) states, while being inverted (active-low) or not. In other words, it adds logical inversion support to Pin functionality. While this may seem a simple addition, it is exactly what is needed to support wide array of simple digital devices in a way portable across different boards, which is one of the major MicroPython goals. Regardless of whether different users have an active-high or active-low LED, a normally open or normally closed relay - you can develop a single, nicely looking application which works with each of them, and capture hardware configuration differences in few lines in the config file of your app.  The following example shows how to create signals to control the inner LED on both eyes of the Whale-Tail   from machine import Signal import utime rightMiddlePin = Pin(10, Pin.OUT) rightMiddleLED = Signal(rightMiddlePin) # can combine constructor to one leftMiddleLED = Signal(Pin(26, Pin.OUT) rightMiddleLED.on() leftMiddleLED.off() # .value() returns the status of the LED (On=1, Off=0) print(rightMiddleLED.value()) # will print 1 print(leftMiddleLED.value()) # will print 0 # alternate flashing each green LED every second while True: rightMiddleLED.on() leftMiddleLED.off() utime.sleep_ms(1000) rightMiddleLED.on() leftMiddleLED.off() utime.sleep_ms(1000)  ","version":"Next","tagName":"h3"}],"options":{"indexBaseUrl":true,"id":"default"}}